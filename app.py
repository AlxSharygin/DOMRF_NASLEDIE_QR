from flask import Flask, redirect, request, make_response
import os
import threading
import time
import hashlib

app = Flask(__name__)
COUNTER_FILE = os.path.join(os.path.dirname(__file__), "counter.txt")
lock = threading.Lock()

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –¥—É–±–ª–µ–π
recent_visitors = {}
RECENT_TIMEOUT = 5  # —Å–µ–∫—É–Ω–¥

def get_visitor_key():
    ip = request.remote_addr or "unknown"
    ua = request.headers.get('User-Agent', '') or "unknown"
    key_str = f"{ip}:{ua}"
    return hashlib.md5(key_str.encode()).hexdigest()

@app.route('/health')
def health_check():
    return "OK", 200

@app.route('/run')
def track_and_redirect():
    visitor_key = get_visitor_key()
    now = time.time()

    with lock:
        # –û—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–ø–∏—Å–∏
        to_delete = [key for key, ts in recent_visitors.items() if now - ts > RECENT_TIMEOUT]
        for key in to_delete:
            recent_visitors.pop(key, None)

        # –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –¥—É–±–ª–µ–π
        if visitor_key in recent_visitors:
            print(f"–î—É–±–ª—å –æ—Ç {visitor_key} ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º")
            response = make_response(redirect("https://xn--80aicbopm7a.xn--d1aqf.xn--p1ai/", code=302))
            if not request.cookies.get('visited'):
                response.set_cookie('visited', 'true', max_age=3600, path='/')
            return response

    # –ï—Å–ª–∏ –∫—É–∫–∞ —É–∂–µ –µ—Å—Ç—å ‚Äî –Ω–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º
    if request.cookies.get('visited') == 'true':
        print("–£–∂–µ –ø–æ—Å–µ—â–∞–ª–∏ (–∫—É–∫–∞) ‚Äî –Ω–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫")
        return redirect("https://xn--80aicbopm7a.xn--d1aqf.xn--p1ai/", code=302)

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫
    count = 0
    with lock:
        if os.path.exists(COUNTER_FILE):
            try:
                with open(COUNTER_FILE, "r") as f:
                    count = int(f.read().strip())
            except Exception:
                count = 0

        count += 1

        try:
            with open(COUNTER_FILE, "w") as f:
                f.write(str(count))
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Å—á—ë—Ç—á–∏–∫–∞: {e}")

    print(f"–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: {count}")

    # –†–µ–¥–∏—Ä–µ–∫—Ç + —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—É–∫–∏ –Ω–∞ –≤–µ—Å—å —Å–∞–π—Ç
    response = make_response(redirect("https://xn--80aicbopm7a.xn--d1aqf.xn--p1ai/", code=302))
    response.set_cookie('visited', 'true', max_age=3600, path='/')
    return response

@app.route('/reset')
def reset_counter():
    with lock:
        with open(COUNTER_FILE, "w") as f:
            f.write("0")
        recent_visitors.clear()
    print("‚úÖ –°—á—ë—Ç—á–∏–∫ —Å–±—Ä–æ—à–µ–Ω")

    return """
    <h2>‚úÖ –°—á—ë—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω –Ω–∞ 0!</h2>
    <p>–ß—Ç–æ–±—ã –∑–∞–Ω–æ–≤–æ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á—ë—Ç—á–∏–∫ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ ‚Äî <a href="/clear-cookie">—É–¥–∞–ª–∏—Ç–µ –∫—É–∫—É</a>.</p>
    <p><a href="/run">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å—Å—ã–ª–∫–µ</a></p>
    """
@app.route('/statistics')
def statistics():
    return f"""
    <!DOCTYPE html>
    <html>
    <head><title>–ü–µ—Ä–µ—Ö–æ–¥ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω</title><meta charset="utf-8"></head>
    <body style="text-align:center; padding:50px; font-family:Arial;">
        <h2>‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞–ª –ù–∞—Å–ª–µ–¥–∏–µ.–¥–æ–º.—Ä—Ñ —á–µ—Ä–µ–∑ QR-–∫–æ–¥ –†–∞–∑–≤–∏—Ç–∏—è —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞</h2>
        <p><strong>–í—Å–µ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: {count}</strong></p>
        <p><a href="/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a></p>
    </body>
    </html>
    """

@app.route('/clear-cookie')
def clear_cookie():
    print("üç™ –£–¥–∞–ª—è–µ–º –∫—É–∫—É 'visited'...")
    response = make_response("""
    <h2>üç™ –ö—É–∫–∞ 'visited' —É–¥–∞–ª–µ–Ω–∞!</h2>
    <p>–¢–µ–ø–µ—Ä—å –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –ø–æ <a href="/run">/run</a> —Å—á—ë—Ç—á–∏–∫ —Å–Ω–æ–≤–∞ —É–≤–µ–ª–∏—á–∏—Ç—Å—è.</p>
    <p><a href="/run">‚Üê –ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ</a></p>
    """)
    # –£–¥–∞–ª—è–µ–º –∫—É–∫—É –¥–ª—è –≤—Å–µ–≥–æ —Å–∞–π—Ç–∞
    response.set_cookie('visited', '', expires=0, path='/')
    recent_visitors.clear()
    print("‚úÖrecent_visitors –æ—á–∏—â–µ–Ω—ã")
    return response

